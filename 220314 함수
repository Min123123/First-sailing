# 매개변수의 초깃값 설정하기. bool 설정.

def say_myself(name, old, man=True):
    print("나의 이름은 %s 입니다." % name)
    print("나이는 %d세 입니다." % old)
    if man:
        print("남자입니다.")
    else:
        print("여자입니다.")
say_myself("영민",29,True) # 매개변수를 설정해놓지 않은 상태라면 이런 식으로 man이 맞다는 True값을 넣어줘야 하지만!
say_myself("영민",29)  # man = True를 설정하여 항상 남자라고 설정해 놓은 상태. 그렇기에 따로 세 번째 인수를 설정해놓지 않아도 된다.
say_myself("영민",29,False) # 기본값은 True이지만, false를 넣음으로써 변경이되어 여자로 출력이 된다.

# ===> 두 개의 값은 동일하게 출력된다.

# 함수의 위치를 맞춰주는 매핑! 초깃값을 설정한 부분은 맨 뒤에 써야 한다.



# 함수 안에서 선언한 변수의 효력 범위

a = 1
def vartest(a):
    a = a + 1  # 지역변수 : 함수 안에 있는 변수는 오직 함수 안에서만 작동한다.  
print(a)



# 함수 안에서 함수 밖의 변수를 변경하는 방법

# 방법1, return 사용
a = 1 
def vartest(a): 
    a = a +1 
    return a 

a = vartest(a) # return을 통해 결괏값이 출력되고, 이 나온 리턴값을 a라는 변수에 할당한다.
print(a)


# 방법2, global 사용
a = 1 
def global(a): # global(a) : 함수 안에서 사용한 변수 a를 함수 밖에서도 사용하겠다는 뜻.
    a = a +1 
   



#  lambda 함수 :  # 함수를 간결하게 만들기 위해 사용하는 함수, def와 동일하지만, 간결하게 만들거나 def를 사용할 수 없는 곳에 사용.

# lambda 매개변수1, 매개변수2, ...: 매개변수를 이용한 표현식

add = lambda a, b: a+b
result = add(3,4)
print(result)

Mylist = [lambda a, b: a+b,lambda a, b: a*b]
print([0],(1,2)) # 리시트 안에있는 0번째 요솟값을 불러온 후, 인수 1,2 를 대입.




